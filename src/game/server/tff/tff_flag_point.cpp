// Purpose: Body for tff_flag_point
// Boilerplate generated by ModMaker on 23/05/2018 07:49:49
/* */

#include "cbase.h"
#include "items.h"
#include "tff_flag_point.h"

// memdbgon must be the last include file in a .cpp file!!!
#include "tier0/memdbgon.h"

LINK_ENTITY_TO_CLASS( tff_flag_point, CTffFlagPoint );

BEGIN_DATADESC( CTffFlagPoint )
    DEFINE_KEYFIELD( m_iRadius, FIELD_INTEGER, "radius" ), 
    DEFINE_KEYFIELD( m_vecCameraOffset, FIELD_VECTOR, "camera_offset" ),
	DEFINE_INPUTFUNC(FIELD_INPUT, "FlagTaken", Taken),
	DEFINE_INPUTFUNC(FIELD_INPUT, "ReturnFlag", ReturnFlag),
    DEFINE_OUTPUT( m_OnFlagTaken, "OnFlagTaken" ),
    DEFINE_OUTPUT( m_OnFlagReturned, "OnFlagReturned" ),
END_DATADESC()

void CTffFlagPoint::Taken(inputdata_t& inputdata)
{
	m_OnFlagTaken.FireOutput(inputdata.pActivator, this);
};

void CTffFlagPoint::ReturnFlag(inputdata_t& inputdata)
{
	CItem * pFlag = dynamic_cast<CItem *>(inputdata.pCaller);

	if (pFlag == NULL) return;

	Vector spawnOrigin = pFlag->GetOriginalSpawnOrigin();
	QAngle spawnAngles = pFlag->GetOriginalSpawnAngles();

	pFlag->Teleport(&spawnOrigin, &spawnAngles, NULL);

	m_OnFlagReturned.FireOutput(inputdata.pActivator, this);
};