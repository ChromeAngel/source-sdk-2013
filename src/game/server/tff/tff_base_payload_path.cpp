// Purpose: Body for tff_base_payload_path
// Boilerplate generated by ModMaker on 23/05/2018 08:00:01
/* */

#include "cbase.h"
#include "tff_base_payload_path.h"

// memdbgon must be the last include file in a .cpp file!!!
#include "tier0/memdbgon.h"

LINK_ENTITY_TO_CLASS( tff_base_payload_path, CTffBasePayloadPath );

BEGIN_DATADESC( CTffBasePayloadPath )
  //  DEFINE_KEYFIELD( m_iModel, FIELD_MODELNAME, "model" ),  //I think CBaseEntity does this for me
    DEFINE_KEYFIELD( m_iNextPathEntity, FIELD_STRING, "next_path_entity" ),
    DEFINE_KEYFIELD( m_iSpeed, FIELD_INTEGER, "speed" ),
    DEFINE_OUTPUT( m_OnPayloadPassed, "OnPayloadPassed" ),
END_DATADESC()

void CTffBasePayloadPath ::Precache()
{
 //   PrecacheModel( STRING(m_iModel) );  //I think CBaseEntity does this for me
}

void CTffBasePayloadPath ::Spawn()
{
    BaseClass::Spawn();

    Precache();

//	SetModel(STRING(m_iModel));  //I think CBaseEntity does this for me
}

//TODO get all the attachment points from the model and expose them an array of Vectors for the payload to follow

void CTffBasePayloadPath::PayloadPassed(CBaseEntity * pPayload, int& speed, string_t& nextPath)
{
	m_OnPayloadPassed.FireOutput(pPayload, this);
	speed = m_iSpeed;
	nextPath = m_iNextPathEntity;
};